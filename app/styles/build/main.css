/**
* CSS Reset
*/
@import url("//hello.myfonts.net/count/2de541");
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
  /*min-width: 1307px;*/
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

html {
  font-size: 16px;
  /*Base-width for percentages in 1440px*/
}

a {
  text-decoration: none;
}

a {
  color: inherit;
}

/* unvisited link */
a:visited {
  color: inherit;
}

/* visited link */
a:hover {
  color: inherit;
}

/* mouse over link */
a:active {
  color: inherit;
}

/* selected link */
body {
  padding: 0;
}

html, body {
  height: 100%;
}

/**
 * Profound Grid
 * 
 * Built in Sass (SCSS) this responsive/adaptive grid supports both fixed and fluid layouts, 
 * relative and fixed gutters, as well as your choice of semantic markup or generic '.grid-x' classes.
 * 
 * The biggest difference to other grid systems is the use of negative margins for column
 * placements, avoiding the subpixel rounding issues that usually break/uglify fluid layouts
 * in some browsers.
 * 
 * Nested columns are supported too, without having to reset the grid on each level. 
 *
 * Credits/Inspiration:
 * -------------------
 * Semantic Grid: http://www.semantic.gs
 * Susy: http://susy.oddbird.net
 * Negative Grid: http://chrisplaneta.com/freebies/negativegrid-fluid-css-grid-by-chris-planeta/
 *
 * @author Profound Creative Studio
 * @url http://www.profoundgrid.com
 * @url http://www.weareprofound.com 
 */
/**
 * Clearfix
 */
/**
 * Legacy Clearfix
 */
/**
 * Establish the grid-containing element.
 */
/**
 * Align an element to the grid.
 */
/**
 * Apply to any column to make it the last one of the current row.
 */
/**
* Museo Sans
*/
@font-face {
  font-family: 'MuseoSans-300';
  src: url("webfonts/2DE541_0_0.eot");
  src: url("webfonts/2DE541_0_0.eot?#iefix") format("embedded-opentype"), url("webfonts/2DE541_0_0.woff2") format("woff2"), url("webfonts/2DE541_0_0.woff") format("woff"), url("webfonts/2DE541_0_0.ttf") format("truetype");
}

@font-face {
  font-family: 'MuseoSans-500';
  src: url("webfonts/2DE541_1_0.eot");
  src: url("webfonts/2DE541_1_0.eot?#iefix") format("embedded-opentype"), url("webfonts/2DE541_1_0.woff2") format("woff2"), url("webfonts/2DE541_1_0.woff") format("woff"), url("webfonts/2DE541_1_0.ttf") format("truetype");
}

@font-face {
  font-family: 'MuseoSans-900';
  src: url("webfonts/2DE541_2_0.eot");
  src: url("webfonts/2DE541_2_0.eot?#iefix") format("embedded-opentype"), url("webfonts/2DE541_2_0.woff2") format("woff2"), url("webfonts/2DE541_2_0.woff") format("woff"), url("webfonts/2DE541_2_0.ttf") format("truetype");
}

@font-face {
  font-family: 'Avenir';
  src: url("Avenir.ttc");
}

@font-face {
  font-family: 'Futura';
  src: url("Futura.ttc");
}

/**
* Grid Config
*/
.fullWidthGrid {
  width: 100%;
  margin: 0 0%;
  *zoom: 1;
  /* Helper Class: Container */
  /* Helper Class: Columns */
  /* Helper Class: Horizontal Position */
}

.fullWidthGrid :after {
  content: "\0020";
  display: block;
  height: 0;
  clear: both;
  overflow: hidden;
  visibility: hidden;
}

.fullWidthGrid .row {
  width: 100%;
  margin: 0 0%;
}

.fullWidthGrid .col1 {
  float: left;
  margin-right: -100%;
  width: 8.33%;
}

.fullWidthGrid .col2 {
  float: left;
  margin-right: -100%;
  width: 16.67%;
}

.fullWidthGrid .col3 {
  float: left;
  margin-right: -100%;
  width: 25%;
}

.fullWidthGrid .col4 {
  float: left;
  margin-right: -100%;
  width: 33.33%;
}

.fullWidthGrid .col5 {
  float: left;
  margin-right: -100%;
  width: 41.67%;
}

.fullWidthGrid .col6 {
  float: left;
  margin-right: -100%;
  width: 50%;
}

.fullWidthGrid .col7 {
  float: left;
  margin-right: -100%;
  width: 58.33%;
}

.fullWidthGrid .col8 {
  float: left;
  margin-right: -100%;
  width: 66.67%;
}

.fullWidthGrid .col9 {
  float: left;
  margin-right: -100%;
  width: 75%;
}

.fullWidthGrid .col10 {
  float: left;
  margin-right: -100%;
  width: 83.33%;
}

.fullWidthGrid .col11 {
  float: left;
  margin-right: -100%;
  width: 91.67%;
}

.fullWidthGrid .col12 {
  float: left;
  margin-right: -100%;
  width: 100%;
}

.fullWidthGrid .push0 {
  margin-left: 0%;
}

.fullWidthGrid .push1 {
  margin-left: 8.33%;
}

.fullWidthGrid .push2 {
  margin-left: 16.67%;
}

.fullWidthGrid .push3 {
  margin-left: 25%;
}

.fullWidthGrid .push4 {
  margin-left: 33.33%;
}

.fullWidthGrid .push5 {
  margin-left: 41.67%;
}

.fullWidthGrid .push6 {
  margin-left: 50%;
}

.fullWidthGrid .push7 {
  margin-left: 58.33%;
}

.fullWidthGrid .push8 {
  margin-left: 66.67%;
}

.fullWidthGrid .push9 {
  margin-left: 75%;
}

.fullWidthGrid .push10 {
  margin-left: 83.33%;
}

.fullWidthGrid .push11 {
  margin-left: 91.67%;
}

.fullWidthGrid .column {
  height: 100%;
}

.fullWidthGrid .titleColumn {
  float: left;
  margin-right: -100%;
  width: 0%;
  margin-left: 0%;
}

.fullWidthGrid .previewImageColumn {
  float: left;
  margin-right: -100%;
  width: 100%;
  margin-left: 0%;
}

@media screen and (min-width: 800px) {
  .fullWidthGrid .titleColumn {
    float: left;
    margin-right: -100%;
    width: 50%;
    margin-left: 0%;
  }
  .fullWidthGrid .previewImageColumn {
    float: left;
    margin-right: -100%;
    width: 50%;
    margin-left: 50%;
  }
}

.fixedWidthGrid {
  width: 960px;
  margin: 0 0px;
  *zoom: 1;
  /* Helper Class: Container */
  /* Helper Class: Columns */
  /* Helper Class: Horizontal Position */
}

.fixedWidthGrid :after {
  content: "\0020";
  display: block;
  height: 0;
  clear: both;
  overflow: hidden;
  visibility: hidden;
}

.fixedWidthGrid .row {
  width: 960px;
  margin: 0 0px;
}

.fixedWidthGrid .col1 {
  float: left;
  margin-right: -100%;
  width: 61.6666666667px;
}

.fixedWidthGrid .col2 {
  float: left;
  margin-right: -100%;
  width: 143.333333333px;
}

.fixedWidthGrid .col3 {
  float: left;
  margin-right: -100%;
  width: 225px;
}

.fixedWidthGrid .col4 {
  float: left;
  margin-right: -100%;
  width: 306.666666667px;
}

.fixedWidthGrid .col5 {
  float: left;
  margin-right: -100%;
  width: 388.333333333px;
}

.fixedWidthGrid .col6 {
  float: left;
  margin-right: -100%;
  width: 470px;
}

.fixedWidthGrid .col7 {
  float: left;
  margin-right: -100%;
  width: 551.666666667px;
}

.fixedWidthGrid .col8 {
  float: left;
  margin-right: -100%;
  width: 633.333333333px;
}

.fixedWidthGrid .col9 {
  float: left;
  margin-right: -100%;
  width: 715px;
}

.fixedWidthGrid .col10 {
  float: left;
  margin-right: -100%;
  width: 796.666666667px;
}

.fixedWidthGrid .col11 {
  float: left;
  margin-right: -100%;
  width: 878.333333333px;
}

.fixedWidthGrid .col12 {
  float: left;
  margin-right: -100%;
  width: 960px;
}

.fixedWidthGrid .push0 {
  margin-left: 0px;
}

.fixedWidthGrid .push1 {
  margin-left: 81.6666666667px;
}

.fixedWidthGrid .push2 {
  margin-left: 163.333333333px;
}

.fixedWidthGrid .push3 {
  margin-left: 245px;
}

.fixedWidthGrid .push4 {
  margin-left: 326.666666667px;
}

.fixedWidthGrid .push5 {
  margin-left: 408.333333333px;
}

.fixedWidthGrid .push6 {
  margin-left: 490px;
}

.fixedWidthGrid .push7 {
  margin-left: 571.666666667px;
}

.fixedWidthGrid .push8 {
  margin-left: 653.333333333px;
}

.fixedWidthGrid .push9 {
  margin-left: 735px;
}

.fixedWidthGrid .push10 {
  margin-left: 816.666666667px;
}

.fixedWidthGrid .push11 {
  margin-left: 898.333333333px;
}

.mainContain {
  width: 100%;
  max-width: 100%;
  height: 100%;
  margin: 0 auto;
  background-color: white;
}

.headContain {
  background-color: #000;
  color: #fff;
  text-align: center;
  height: auto;
  font-family: 'Avenir';
  font-weight: 700;
}

.headContain .titleContain {
  padding-top: 25px;
  padding-bottom: 20px;
}

.headContain .titleContain h1 {
  font-size: 16px;
  letter-spacing: 3px;
}

.previewContain .previewImageContain {
  height: 100%;
  background-size: cover;
  background-position: center;
}

.previewContain {
  height: 285px;
}

.previewContent {
  width: 85%;
  margin: 0 auto;
  position: relative;
  top: 40%;
}

.rowContain {
  /*border: 1px solid;*/
}

.psalContain .previewImageContain {
  background-image: url("../../images/psalBG3.jpg");
}

.erbContain .previewImageContain {
  background-image: url("../../images/erbBG2.jpg");
}

.macysContain .previewImageContain {
  background-image: url("../../images/macysBG3.jpg");
}

.moodsnapContain .previewImageContain {
  background-image: url("../../images/MoodsnapBG3.png");
}

.compContain .previewImageContain {
  background-image: url("../../images/comptrollerBG2.jpg");
}

.opacityLayer {
  /*background-color: rgba(255, 255, 255, 0.65);*/
  width: 100%;
  height: 100%;
}

.logo {
  width: 100%;
  display: block;
  margin: 0 auto;
}

.psalLogo, .compLogo {
  width: 150px;
}

.erbLogo, .macysLogo, .moodsnapLogo {
  width: 200px;
}

.erbContain .previewContent {
  top: 28%;
}

.moodsnapContain .previewContent {
  top: 44%;
}

.sectionContent {
  font-family: "MuseoSans-300",sans-serif;
  font-weight: 300;
  font-size: 18px;
  line-height: 27px;
}

.sectionContent p {
  margin-bottom: 30px;
}

.rowContain img {
  max-width: 100%;
}

h2 {
  font-family: "MuseoSans-900", sans-serif;
  font-size: 32px;
  line-height: 38px;
  margin-top: 20px;
}

h3 {
  font-family: "MuseoSans-900", sans-serif;
  font-size: 27px;
  line-height: 32px;
}

h4 {
  font-family: "MuseoSans-500", sans-serif;
  font-size: 14px;
  color: #bbb;
  line-height: 24px;
}

.titleContain, .sectionContent {
  padding: 15px;
}

.imgContain {
  text-align: center;
}

.psalPage .specsContain .imgContain {
  padding: 20px;
}

.mgLogo {
  width: 35px;
  height: 35px;
  border-radius: 100%;
  border: 1px solid #fff;
  background-color: #fff;
  float: left;
  position: relative;
  top: 26px;
  left: 20px;
  font-family: "Futura";
}

.homePage .mgLogo {
  float: none;
}

.homePage .projectTitles p {
  margin-top: 40px;
  font-family: "MuseoSans-300", sans-serif;
  font-size: 14px;
  color: #bbb;
  text-decoration: underline;
}

.footContain {
  padding-bottom: 50px;
}

.footContain h3 {
  font-size: 16px;
}

.previewContain .titleContain {
  display: none;
}

@media screen and (min-width: 370px) {
  .previewContain {
    height: 305px;
  }
}

@media screen and (min-width: 800px) {
  .previewContain .titleContain {
    display: inline-block;
    box-sizing: border-box;
    height: 100%;
    vertical-align: top;
  }
  .titleContain .projectTitles {
    position: relative;
    top: 33%;
    left: 25%;
    width: 54%;
  }
  .previewContain .previewImageContain {
    display: inline-block;
    width: 100%;
    height: 100%;
  }
  .psalPage .previewImageContain {
    width: 100%;
  }
  .mainContain {
    max-width: 800px;
  }
  .homePage .mainContain {
    max-width: 100%;
  }
  .previewContain {
    height: 475px;
  }
  .psalLogo, .compLogo {
    width: 50%;
  }
  .erbLogo, .macysLogo, .moodsnapLogo {
    width: 52%;
  }
  h4 {
    font-size: 19px;
  }
  h2 {
    font-size: 37px;
    line-height: 43px;
  }
}

@media screen and (min-width: 1100px) {
  h2 {
    font-size: 46px;
    line-height: 53px;
  }
  h4 {
    font-size: 21px;
    line-height: 35px;
  }
}

/*# sourceMappingURL=data:application/json;base64, */
